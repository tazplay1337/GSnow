<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($rootScope, $scope, spUtil) {
	var c = this;
	c.data.useButtonEnabled = true;
	c.data.selected = [];

	var counter = 0;
	c.data.hands.forEach(function(card) {
		if(card.type == "Item"){
			card.index = counter;
			c.data.selected.push(card.selected_player);
		}
		counter += 1;
	});

	$scope.useCard = function(hand, selected_player) {		
		if(hand.type == "Item" && selected_player == "Wähle Spieler"){
			alert("Bitte Wähle einen Spieler aus, auf den du diesen Effekt wirken möchtest!");
		}
		else{
			c.data.usedCard = hand.sysid;		
			c.data.usedPlayer = selected_player;
			c.server.update();
		}
	}

	$scope.refresh = function() {
		c.data.update = true;
		c.server.update().then(function(){
			c.data.update = false;
		});  
	}

	$rootScope.$on('CARDS_CHANGE', function(event,data) {
		c.server.update();
	});

	spUtil.recordWatch($scope, "x_166119_gsnow_m2m_players_cards", "u_game.number=" + c.data.gameID, function(name, data) {
		c.server.update();
	});

	$rootScope.$on('USE_BUTTON1', function(event,data) {
		if(data){
			c.data.useButtonEnabled = true;
		}
		else{
			c.data.useButtonEnabled = false;
		}
	});

	$scope.checkPhase = function(){
		if(c.data.useButtonEnabled){
			return false;	
		}
		else{
			return true;
		}
	}

	$scope.select = function(index, selected_player, player) {
		c.data.selected[index] = player;
		selected_player = player;
	}

	$scope.remove = function(index) {
		c.data.selected[index] = "Wähle Spieler";
	}

	$scope.showButton = function(button_typ_advanced) {
		if(button_typ_advanced){
			return true;
		}
		else{
			return false;
		}
	} 
}	]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel {
  margin: 0.5cm 0 1cm 0;
  min-height: 8cm;
}

body{
font-family:"Open Sans","lucida grande","Segoe UI",arial,verdana,"lucida sans unicode",tahoma,sans-serif;font-size:13px;color:#3d464d;font-weight:normal
}
.list-group-item{
    border: 0;
    padding-left: 0;
    border-top: 1px solid;
    border-color: rgba(37,40,43,0.1);
}
.list-group .list-group-item:first-child{
    border:0;
}
.list-group .list-group-item a{
    color: #2895F1;
    cursor: pointer;
    text-decoration: none;
}
.list-group.list-group-header{
    padding:0;
    margin:0;
  	font-size:15px
}
.list-group.list-group-body .glyphicon {
 font-size: 25px; vertical-align: middle;
}
.list-group-panel{
    border: 1px solid #ccdbeb;
    border-radius: 0;
}

//ng-if="showButton(hand.button_typ_advanced)"

/*
.btn{

}

.btn-primary {
}


/*
.btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
  min-height: 25px;
  white-space: normal;
  padding:5px;
  margin: 2px
}



.btn-scroll {
  width: 35px;
}
*/</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gs_list_cards</id>
        <internal>false</internal>
        <link/>
        <name>GS List Cards</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	// Get gameID from URL
	data.gameID = $sp.getParameter("gameID");
	data.players = [];
	data.hands = [];
	data.equipments = [];
	data.effects = [];
	data.usedCard = "";
	data.usedPlayer = "";


	var name_long = "";
	var name_short = "";
	var player_sysid = "";
	
	var grPlayer = new GlideRecord('x_166119_gsnow_player');
	grPlayer.addQuery('u_game.number', data.gameID);
	grPlayer.query();

	while(grPlayer.next()){
		name_long = grPlayer.u_user.getDisplayValue();
		name_short = getNameShort(name_long);
		data.players.push(name_short);

		if(input && input.usedPlayer == name_short){
			player_sysid = grPlayer.sys_id.getDisplayValue();			
		}
	}

	if(input && input.usedCard){
		data.usedCard = input.usedCard;
		var grUsedCard = new GlideRecord('x_166119_gsnow_m2m_players_cards');
		grUsedCard.get('sys_id', data.usedCard);

		if(grUsedCard.card.u_card_type == '20'){		//Equipment
			grUsedCard.u_playing_field = '30';
			grUsedCard.update();
		}
		else if(grUsedCard.card.u_card_type == '30' && input.usedPlayer){		//Item
			grUsedCard.u_playing_field = '40';
			grUsedCard.player = player_sysid;
			grUsedCard.u_remain_lifetime = grUsedCard.card.u_lifetime;
			grUsedCard.update();
		}
	}

	var grCards = new GlideRecord('x_166119_gsnow_m2m_players_cards');
	grCards.addQuery('u_game.number', data.gameID);
	grCards.addQuery('player.u_user', gs.getUserID());
	grCards.addQuery('u_playing_field', '!=', '0');
	grCards.addQuery('u_position', '!=', '0');
	grCards.query();

	while(grCards.next()){
		// #################################################################################
		// ############### Hand Cards ######################################################
		// #################################################################################
		if(grCards.u_playing_field == "20"){
			var selected_player = "Wähle Spieler";
			var button_typ_advanced = true;
			var pos = "";

			if(grCards.card.u_card_type == "20"){
				pos = grCards.card.u_position.getDisplayValue();
				button_typ_advanced = false;
				selected_player = getNameShort(gs.getUserDisplayName());
			}

			var hand = {
				name: grCards.card.u_name.getDisplayValue(),
				sysid: grCards.sys_id.getDisplayValue(),
				pos: pos,
				type: grCards.card.u_card_type.getDisplayValue(),
				effect: grCards.card.u_effect.getDisplayValue(),
				selected_player: selected_player,
				index: 0,
				button_typ_advanced: button_typ_advanced
			};
			data.hands.push(hand);
		}	

		// #################################################################################
		// ############### Personal Equipment ##############################################
		// #################################################################################
		else if(grCards.u_playing_field == '30'){
			var equipment = {
				name: grCards.card.u_name.getDisplayValue(),
				pos: grCards.card.u_position.getDisplayValue(),
				effect: grCards.card.u_effect.getDisplayValue()
			};
			data.equipments.push(equipment);
		}
		// #################################################################################
		// ############### Affected Me Field ###############################################
		// #################################################################################
		else if(grCards.u_playing_field == '40'){		//Affected Me Field
			var effect = {
				name: grCards.card.u_name.getDisplayValue(),
				type: grCards.card.u_card_type.getDisplayValue(),
				life: (grCards.u_remain_lifetime + 1).toString(),
				effect: grCards.card.u_effect.getDisplayValue()
			};
			data.effects.push(effect);
		}
	}

	if(input && input.update){
		gs.addInfoMessage("Meine Kartenanzeige aufgefrischt");
	}
})();

function getNameShort(name_long){
	name_long = name_long.split(" ");
	var name_short = name_long[0] + " " + name_long[1][0] + ".";
	return name_short;
}
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-02 11:54:01</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ef36f7934f9343009827c4b18110c7fe</sys_id>
        <sys_mod_count>386</sys_mod_count>
        <sys_name>GS List Cards</sys_name>
        <sys_package display_value="GSnow" source="x_166119_gsnow">1f4727414f3203009827c4b18110c713</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="GSnow">1f4727414f3203009827c4b18110c713</sys_scope>
        <sys_update_name>sp_widget_ef36f7934f9343009827c4b18110c7fe</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-18 23:27:52</sys_updated_on>
        <template><![CDATA[<!-- Nav tabs -->
<div class="panel panel-primary">
  <ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item active">
      <a class="nav-link active" id="hand-tab" data-toggle="tab" href="#hand" role="tab" aria-controls="home" aria-selected="true">Handkarten ({{c.data.hands.length}})</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" id="equipment-tab" data-toggle="tab" href="#equipment" role="tab" aria-controls="profile" aria-selected="false">Ausrüstung ({{c.data.equipments.length}})</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" id="effects-tab" data-toggle="tab" href="#effects" role="tab" aria-controls="messages" aria-selected="false">Wirkende Effekte ({{c.data.effects.length}})</a>
    </li>
    <li class="nav-item">
      <a class="nav-link"   role="tab" aria-controls="messages" aria-selected="false" ng-click="refresh()"><i class="fa fa-refresh" aria-hidden="true"></i></a>
    </li>
  </ul>

  <!-- Tab panes -->
  <div class="tab-content">
    <div class="tab-pane active" id="hand" role="tabpanel" aria-labelledby="hand-tab">

      <div class="row">
        <div class="col-xs-12" style="">
          <div class="panel panel-default list-group-panel">
            <div class="panel-body">

              <ul class="list-group list-group-header">
                <li class="list-group-item list-group-body">
                  <div class="row">
                    <div class="col-xs-3 text-left">Name</div>
                    <div class="col-xs-2">Typ</div>
                    <div class="col-xs-2">Position</div>
                    <div class="col-xs-1">+</div>
                    <div class="col-xs-4">Einsetzen Auf</div>
                  </div>
                </li>
              </ul>

              <ul class="list-group list-group-body" style="">
                <li class="list-group-item" ng-repeat="hand in c.data.hands">
                  <div class="row">
                    <div class="col-xs-3 text-left" style=" "> <a>{{::hand.name}} </a></div>
                    <div class="col-xs-2" style="">{{::hand.type}}</div>
                    <div class="col-xs-2" style="">{{::hand.pos}}</div>
                    <div class="col-xs-1" style="">{{::hand.effect}}</div>
                    <div class="col-xs-4" style="">
                      <!--   {{c.data.selected[hand.index]}}                   <div class="btn btn-primary btn-scroll" ng-click="useCard(hand)" ng-disabled="checkPhase()"> {{c.data.selected[hand.index}}-->
                      <div class="btn-group" ng-if="showButton(hand.button_typ_advanced)">
                        <a class="btn btn-primary" ng-disabled="checkPhase()" ng-click="useCard(hand, c.data.selected[hand.index])" style="color: white; min-width: 110px;" href=javascript:void(0)><i class=""></i>{{c.data.selected[hand.index]}}</a>
                        <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" ng-disabled="checkPhase()" href="javascript:void(0)" style="color: white">
                          <span class="fa fa-caret-down" title="Toggle dropdown menu"></span>
                        </a>    
                        <ul class="dropdown-menu">
                          <li><a href="javascript:void(0)"  ng-click="remove(hand.index)" style="color: #8b8989"><i class="fa fa-trash-o fa-fw"></i>Entfernen</a></li>
                          <li class="divider"></li>
                          <li ng-repeat="player in c.data.players | orderBy" ><a href="javascript:void(0)"  ng-click="select(hand.index, hand.selected_player, player)"><i class="fa fa-user fa-fw"></i>{{player}}</a></li>
                        </ul>
                      </div>
                      <div class="btn-group" ng-if="!showButton(hand.button_typ_advanced)">
                        <button type="button" ng-click="useCard(hand)" class="btn btn-primary" ng-disabled="checkPhase()" style="min-width: 135px; height: 32px;">{{::hand.selected_player}}</button>
                      </div>
                    </div>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="tab-pane" id="equipment" role="tabpanel" aria-labelledby="equipment-tab">
      <div class="row">
        <div class="col-xs-12" style="">
          <div class="panel panel-default list-group-panel">
            <div class="panel-body">
              <ul class="list-group list-group-header">
                <li class="list-group-item list-group-body">
                  <div class="row">
                    <div class="col-xs-3 text-left">Name</div>
                    <div class="col-xs-2">Position</div>
                    <div class="col-xs-2">Effect</div>
                  </div>
                </li>
              </ul>
              <ul class="list-group list-group-body" style="">
                <li class="list-group-item" ng-repeat="equipment in c.data.equipments">
                  <div class="row">
                    <div class="col-xs-3 text-left" style=" "> <a>{{::equipment.name}} </a></div>
                    <div class="col-xs-2" style="">{{::equipment.pos}}</div>
                    <div class="col-xs-2" style="">{{::equipment.effect}}</div>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="tab-pane" id="effects" role="tabpanel" aria-labelledby="messages-tab">
      <div class="row">
        <div class="col-xs-12" style="">
          <div class="panel panel-default list-group-panel">
            <div class="panel-body">
              <ul class="list-group list-group-header">
                <li class="list-group-item list-group-body">
                  <div class="row">
                    <div class="col-xs-3 text-left">Name</div>
                    <div class="col-xs-3">Kartentyp</div>
                    <div class="col-xs-2">Dauer</div>
                    <div class="col-xs-2">Effekt</div>
                  </div>
                </li>
              </ul>
              <ul class="list-group list-group-body" style="">
                <li class="list-group-item" ng-repeat="effect in c.data.effects">
                  <div class="row">
                    <div class="col-xs-3 text-left" style=" "> <a>{{::effect.name}} </a></div>
                    <div class="col-xs-3" style="">{{::effect.type}}</div>
                    <div class="col-xs-2" style="">{{::effect.life}}</div>
                    <div class="col-xs-2" style="">{{::effect.effect}}</div>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<!--
<div class="btn btn-primary btn-scroll" ng-click="useCard(hand)" ng-disabled="checkPhase()">
<span class="glyphicon glyphicon glyphicon-ok" aria-hidden="true"></span>
</div>
-->
]]></template>
    </sp_widget>
</record_update>
